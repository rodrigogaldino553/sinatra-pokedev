# TODO
  
  * build basic project structure
  * make it works
  * deploy to heroku
  * build service to request github api
  * consume github service through api
  * adapt sinatra to works with views
  * make it works with views
  * try to use some css framework like materialize ui: https://materializecss.com/getting-started.html
  ~ Try to use SPA approach, using yield method and layouts pages
  * implements csrf protection
  - Take care of SEO issues, like adding a meta description tag
  - setup google analytics before publish it on linkedin
  - add buy me a coffe link
  - desenvolver um icone
  - procurar referencias para o design
  - melhorar o estilo trocando as cores e tirando um pouco a cara de material design
  - customizar a navbar
  - na tela de resultados
    - tem um wireframe diretor na pasta de assets, se baseie la, colocando mais informações e links que a api disponibiliza
    pensei em por tbm aquele mozaico de contribuições do git
    - pesquisar a viabilidade de inserir o mozaico de contribuiçoes
      um caminho é ir atras daqueles com animação que o pessoal coloca no readme profile ou como naquela lib do github worth
  - git flow
  - add um buy me a coffe button
  - colocar mais espaço pro footer na home no mobile, quem sabe até colocar ela embaixo de tudo
  - pensei em fazer uma privacy policy static page tbm
  * corrigir alerts
  * extrair mensagens de status para metodo
  * add loading e desabilitar form qnd estiver carregando a pesquisar
  - settar a branch production para fazer deploy
  - implementar tests
    - configurar gem simplecov de cobertura de tests
    - configura gem de linter de codigo
    - configurar aplicação para docker
    - setup de CI/CD para deploy
    - talvez preciso do rake


# AFTER ALL(refactorings)
/services/githubservice:11
  linha que faz a conversão do username, reduz aqueles gsub


# UTOPIC

  - Implementate unit tests in sinatra
      *Scenarios:
        - Testar as respostas possiveis de request
        - testar comportamento com e sem parametros
        - testar caminho feliz primeiro

  - CI/CD setup to github
  - install gems to auto analysis:
    - linter(rubocop/standar)
    - tests covering
    - security covering

  - Usar o docker

